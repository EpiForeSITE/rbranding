[{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"principles","dir":"Articles","previous_headings":"General Design Principles for Accessibility","what":"Principles","title":"Accessibility Guidelines","text":"Use descriptive alt text non-text content Avoid using color convey meaning Ensure sufficient contrast text UI elements Ensure functions keyboard-accessible Provide clear focus indicators Avoid time-limited interactions unless necessary Use consistent layout predictable navigation Group related controls landmarks (e.g., <main>, <nav>) Use headings (<h1>–<h6>) meaningfully hierarchically Provide downloadable raw data visualizations Use accessible HTML tables present data possible Include text summaries visualizations Reuse layouts component patterns Ensure button/tab behaviors predictable Avoid keyboard traps focus loops","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"testing-tools","dir":"Articles","previous_headings":"","what":"Testing Tools","title":"Accessibility Guidelines","text":"free, widely available tools can use evaluate accessibility dashboards: axe DevTools Browser Extension: Runs automated scans developer tools flag WCAG issues suggest fixes right browser. WAVE Browser Extension: Adds ‑page overlay visually marks accessibility errors, alerts, structural cues quick review. WebAIM Contrast Checker: Tests foreground‑background color pair confirm meets WCAG AA/AAA contrast ratios. addition automated tools, always perform manual checks screen reader. Popular options include VoiceOver (macOS/iOS), NVDA (Windows), JAWS (Windows).","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"accessiblity-guidelines-cheatsheet","dir":"Articles","previous_headings":"","what":"Accessiblity Guidelines Cheatsheet","title":"Accessibility Guidelines","text":"created cheatsheet accessiblity guidelines. may download cheatsheet PDF SVG","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"ggplot2 and Thematic Integration with Brand Themes","text":"vignette demonstrates integrate ggplot2 plotly visualizations brand themes using rbranding package. package provides functions : Load brand configuration _brand.yml files Apply brand colors typography ggplot2 themes Add brand logos plots Reset themes needed","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"ggplot2 and Thematic Integration with Brand Themes","text":"First, let’s load required packages:","code":"library(rbranding) library(ggplot2)  # Suggested packages for enhanced functionality # library(plotly)  # For interactive plots # library(sysfonts)  # For custom fonts # library(showtext)  # For custom fonts"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-1-initialize-and-load-brand-configuration","dir":"Articles","previous_headings":"","what":"Step 1: Initialize and Load Brand Configuration","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Start initializing branding configuration getting latest brand file: vignette, ’ll use existing _brand.yml file package:","code":"# Initialize branding (creates config.yml and placeholder _brand.yml) brand_init()  # Get the latest brand file from the repository get_brand()  # to install these files directly to your working directory: get_template(\"ggplot2) # In a real project, you would have a _brand.yml file in your working directory # For this demo, we'll use the package's example brand file brand_file <- system.file(\"brand_files\", \"_brand.yml\", package = \"rbranding\") if (brand_file != \"\") {   file.copy(brand_file, \"_brand.yml\")   # Copy logo files as well   logo_files <- list.files(system.file(\"brand_files\", package = \"rbranding\"),                            pattern = \"*.png\", full.names = TRUE)   file.copy(logo_files, \".\")   brand_file <- \"_brand.yml\" } else {   # Fallback to a basic brand configuration for demonstration   brand_config <- \" meta:   name:     full: Example Organization     short: EO  color:   palette:     primary: '#1c8478'     secondary: '#4e2d53'     accent: '#474747'   foreground: black   background: white   primary: primary   secondary: secondary  typography:   fonts:     - family: Open Sans       source: google   base: Open Sans \"   writeLines(brand_config, \"_brand.yml\")   brand_file <- \"_brand.yml\" }  cat(\"Using brand file:\", brand_file) #> Using brand file: _brand.yml"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-2-set-the-ggplot2-theme","dir":"Articles","previous_headings":"","what":"Step 2: Set the ggplot2 Theme","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Apply brand theme ggplot2. set colors fonts according brand configuration:","code":"# Set the brand theme brand_set_ggplot(brand_file) #> Brand theme applied successfully! #> Custom font loaded: open_sans"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-3-create-ggplot2-visualizations","dir":"Articles","previous_headings":"","what":"Step 3: Create ggplot2 Visualizations","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Now create plots automatically use brand theme:","code":"# Create a basic scatter plot p1 <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point(aes(color = factor(cyl)), size = 3) +   labs(     title = \"Car Weight vs. Miles per Gallon\",     subtitle = \"Data from the 1974 Motor Trend magazine\",     x = \"Miles per Gallon\",     y = \"Weight (1000 lbs)\",     color = \"Cylinders\"   ) +   theme(legend.position = \"bottom\")  print(p1) # Create a bar plot p2 <- ggplot(mtcars, aes(x = factor(cyl), fill = factor(gear))) +   geom_bar(position = \"dodge\") +   labs(     title = \"Car Count by Cylinders and Gears\",     x = \"Number of Cylinders\",     y = \"Count\",     fill = \"Gears\"   ) +   theme(legend.position = \"bottom\")  print(p2)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-4-add-brand-logo-optional","dir":"Articles","previous_headings":"","what":"Step 4: Add Brand Logo (Optional)","title":"ggplot2 and Thematic Integration with Brand Themes","text":"brand configuration includes logo, can add plots:","code":"# Add logo to the plot (requires logo in brand.yml and png package) p1_with_logo <- p1 + brand_add_logo(x = 0.9, y = 0.1, size = 0.05) print(p1_with_logo)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-5-interactive-plots-with-plotly","dir":"Articles","previous_headings":"","what":"Step 5: Interactive Plots with plotly","title":"ggplot2 and Thematic Integration with Brand Themes","text":"can also create interactive versions plots using plotly:","code":"library(plotly)  # Convert ggplot to interactive plotly chart p1_interactive <- ggplotly(p1, tooltip = c(\"x\", \"y\", \"colour\")) p1_interactive"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-6-advanced-theming","dir":"Articles","previous_headings":"","what":"Step 6: Advanced Theming","title":"ggplot2 and Thematic Integration with Brand Themes","text":"can customize specific aspects theme maintaining brand consistency:","code":"# Customize theme elements while keeping brand colors p3 <- ggplot(mtcars, aes(x = hp, y = mpg, size = wt)) +   geom_point(alpha = 0.7) +   scale_size_continuous(range = c(2, 8)) +   labs(     title = \"Engine Performance Analysis\",     subtitle = \"Relationship between horsepower, fuel efficiency, and weight\",     x = \"Horsepower\",     y = \"Miles per Gallon\",     size = \"Weight (1000 lbs)\"   ) +   theme(     plot.title = element_text(size = 16, face = \"bold\"),     plot.subtitle = element_text(size = 12, face = \"italic\"),     legend.position = \"right\"   )  print(p3)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-7-reset-theme","dir":"Articles","previous_headings":"","what":"Step 7: Reset Theme","title":"ggplot2 and Thematic Integration with Brand Themes","text":"’re done brand theme, can reset default ggplot2 theme:","code":"# Reset to original theme brand_reset_ggplot() #> ggplot2 theme reset to previous state.  # Create a plot with default theme to show the difference p4 <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point(aes(color = factor(cyl)), size = 3) +   labs(     title = \"Same Plot with Default Theme\",     x = \"Miles per Gallon\",     y = \"Weight (1000 lbs)\",     color = \"Cylinders\"   )  print(p4)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Set theme early: Call brand_set_ggplot() beginning analysis Test font loading: Custom fonts may work environments Use consistent colors: Stick brand palette consistency Reset needed: Use brand_reset_ggplot() return default themes Logo placement: Position logos don’t interfere data","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Font loading fails: environments may support custom Google Fonts Logo found: Ensure logo path _brand.yml correct file exists Colors applied: Check _brand.yml file follows correct schema","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"solutions","dir":"Articles","previous_headings":"Troubleshooting","what":"Solutions","title":"ggplot2 and Thematic Integration with Brand Themes","text":"","code":"# Disable custom fonts if having issues brand_set_ggplot(use_fonts = FALSE)  # Check brand configuration doc <- yaml::read_yaml(\"_brand.yml\") str(doc$color) str(doc$typography)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"ggplot2 and Thematic Integration with Brand Themes","text":"rbranding package makes easy create consistent, branded visualizations across organization. following workflow, can ensure ggplot2 plotly charts maintain brand consistency accessible professional. information brand.yml schema, visit: https://github.com/posit-dev/brand-yml/","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/quarto-templates.html","id":"rmark-a-simple-r-markdown-template-for-one-page-pdf-or-html-reports","dir":"Articles","previous_headings":"","what":"rmark: A simple r markdown template for one-page pdf or html reports","title":"Quarto templates","text":"Install :","code":"rbranding::get_template(\"rmark\")"},{"path":"https://epiforesite.github.io/rbranding/articles/quarto-templates.html","id":"qwebsite-a-simple-website-template-for-quarto","dir":"Articles","previous_headings":"","what":"qwebsite: A simple website template for quarto","title":"Quarto templates","text":"Install :","code":"rbranding::get_template(\"qwebsite\")"},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"in-the-r-console","dir":"Articles","previous_headings":"","what":"In the R console:","title":"rbranding","text":"Install package github (necessary):","code":"#In the r terminal: #Install the package from github (if necessary): >devtools::install_github(\"rbranding/rbranding\") #load the library: >library(rbranding)  #Initialize the rbranding package: >rbranding::init_rbranding()  #get the latest version of the _brand.yml file: >rbranding::get_brand()  #install the example1 template: >rbranding::get_template(\"example1\")"},{"path":"https://epiforesite.github.io/rbranding/articles/shiny-templates.html","id":"example-1-map-and-table-with-links-to-details","dir":"Articles","previous_headings":"","what":"Example 1: Map and Table with links to details","title":"Shiny Templates","text":"Install :","code":"rbranding::get_template(\"wastewater\")"},{"path":"https://epiforesite.github.io/rbranding/articles/shiny-templates.html","id":"example-2-histogram-with-controls-on-the-left","dir":"Articles","previous_headings":"","what":"Example 2: Histogram with controls on the left","title":"Shiny Templates","text":"Install :","code":"rbranding::get_template(\"shiny2\")"},{"path":"https://epiforesite.github.io/rbranding/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Willy Ray. Author, maintainer. Andrew Pulsipher. Author, contributor. Centers Disease Control Prevention's Center Forecasting Outbreak Analytics. Funder.           Cooperative agreement CDC-RFA-FT-23-0069","code":""},{"path":"https://epiforesite.github.io/rbranding/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ray W, Pulsipher (2025). rbranding: Package (Title Case). R package version 0.1.0, https://epiforesite.github.io/rbranding/.","code":"@Manual{,   title = {rbranding: What the Package Does (Title Case)},   author = {Willy Ray and Andrew Pulsipher},   year = {2025},   note = {R package version 0.1.0},   url = {https://epiforesite.github.io/rbranding/}, }"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":null,"dir":"","previous_headings":"","what":"R Branding Package Developer Instructions","title":"R Branding Package Developer Instructions","text":"ALWAYS follow instructions first fallback additional search bash commands information incomplete found error.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"repository-overview","dir":"","previous_headings":"","what":"Repository Overview","title":"R Branding Package Developer Instructions","text":"R package called rbranding facilitates creation Shiny apps CFA projects conforming STLTs’ branding design standards. package provides automated branding configuration, theme management, interactive component linking ForeSITE Shiny applications.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"core-package-functions","dir":"","previous_headings":"","what":"Core Package Functions","title":"R Branding Package Developer Instructions","text":"brand_init() - Initializes branding configuration creating config.yml _brand.yml files get_brand() - Downloads/updates latest branding files remote repository user prompts link_leaflet_dt() - Links leaflet maps DT data tables interactive dashboards","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"system-requirements","dir":"","previous_headings":"Dependencies and Installation","what":"System Requirements","title":"R Branding Package Developer Instructions","text":"","code":"# Install R and core development tools sudo apt-get update sudo apt-get install -y r-base r-base-dev sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-extra"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"r-package-dependencies","dir":"","previous_headings":"Dependencies and Installation","what":"R Package Dependencies","title":"R Branding Package Developer Instructions","text":"CRITICAL: CRAN access fails network errors, normal restricted environments. package builds successfully just apt-installed dependencies.","code":"# Install core R packages via apt (more reliable than CRAN in restricted environments) sudo apt-get install -y r-cran-devtools r-cran-yaml r-cran-shiny r-cran-dt r-cran-htmltools sudo apt-get install -y r-cran-dplyr r-cran-knitr r-cran-rmarkdown r-cran-bslib  # If network access to CRAN is available, install additional packages: sudo Rscript -e \"install.packages(c('leaflet', 'tinytest', 'here', 'pkgdown'), repos='https://cloud.r-project.org/')\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-commands","dir":"","previous_headings":"Building and Testing","what":"Build Commands","title":"R Branding Package Developer Instructions","text":"NEVER CANCEL builds tests. Package builds complete 10-15 seconds. Always set appropriate timeouts: - Build/check commands: Set timeout 30+ minutes - Documentation: Set timeout 10+ minutes - Installation: Set timeout 5+ minutes","code":"# Build and check the package - NEVER CANCEL, takes 10-15 seconds _R_CHECK_FORCE_SUGGESTS_=false make check  # Install the package - takes 1 second   sudo make install  # Generate documentation - takes 1.5 seconds make docs  # Build pkgdown website (if pkgdown available) make website"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"testing","dir":"","previous_headings":"Building and Testing","what":"Testing","title":"R Branding Package Developer Instructions","text":"Note: Current tests path dependency issues. Core package functionality can validated manually.","code":"# Test core package functionality (always works) echo 'library(rbranding); brand_init()' | R --no-save --quiet  # Run unit tests (requires tinytest and proper paths) echo 'library(tinytest); run_test_dir(\"inst/tinytest\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"available-applications","dir":"","previous_headings":"Running Applications","what":"Available Applications","title":"R Branding Package Developer Instructions","text":"Main App: inst/app/app.R - Main branding demonstration app Wastewater Dashboard: inst/examples/wastewater/app.R - Interactive map/table linking Quarto Website: inst/examples/qwebsite/ - Branded Quarto site example R Markdown: inst/examples/rmark/ - Branded R Markdown examples","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"running-apps-with-script","dir":"","previous_headings":"Running Applications","what":"Running Apps with Script","title":"R Branding Package Developer Instructions","text":"","code":"# Run main app (in inst/app/) ./run_app.sh  # Note: Script looks for inst/app/examples/ but examples are in inst/examples/ # Run examples manually instead: cd inst/examples/wastewater && Rscript app.R  # Get script help ./run_app.sh --help"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"manual-shiny-app-execution","dir":"","previous_headings":"Running Applications","what":"Manual Shiny App Execution","title":"R Branding Package Developer Instructions","text":"DEPENDENCY LIMITATION: Example apps require leaflet DT packages may available environments. Core package functionality works without .","code":"# For apps requiring full dependencies cd inst/examples/wastewater Rscript -e \"shiny::runApp('app.R', host='0.0.0.0', port=3838)\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"always-test-after-making-changes","dir":"","previous_headings":"Validation Scenarios","what":"ALWAYS Test After Making Changes","title":"R Branding Package Developer Instructions","text":"Build Validation: Must complete successfully 10-15 seconds. Core Function Test: create config.yml _brand.yml files. Package Help Test: display package information function index. Documentation Test: complete without errors 1.5 seconds.","code":"_R_CHECK_FORCE_SUGGESTS_=false make check echo 'library(rbranding); brand_init()' | R --no-save --quiet echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet make docs"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"manual-testing-workflow","dir":"","previous_headings":"Validation Scenarios","what":"Manual Testing Workflow","title":"R Branding Package Developer Instructions","text":"dependencies available (common restricted environments): 1. Test core package functions: bash    echo 'library(rbranding); brand_init()' | R ---save --quiet create config.yml _brand.yml files without errors. Test package loading help: dependencies available (full environment): 1. Navigate inst/examples/wastewater/ 2. Start Shiny app: Rscript -e \"shiny::runApp('app.R')\" 3. Test interactive features: - Click map markers verify table row selection - Click table rows verify map marker highlighting - Verify details panel updates correctly - Test multiple locations Note: Main app inst/app/app.R currently structural issues. Use example apps testing.","code":"echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"key-directories","dir":"","previous_headings":"Repository Structure","what":"Key Directories","title":"R Branding Package Developer Instructions","text":"R/ - Package source code (get_repo.R, get_template.R, link_plots.R) inst/examples/ - Example applications demonstrating package usage inst/tinytest/ - Unit tests using tinytest framework man/ - Generated documentation files vignettes/ - Package vignettes tutorials .github/workflows/ - CI/CD pipelines (R-CMD-check.yaml, pkgdown.yaml)","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"important-files","dir":"","previous_headings":"Repository Structure","what":"Important Files","title":"R Branding Package Developer Instructions","text":"DESCRIPTION - Package metadata dependencies Makefile - Build automation (check, install, docs, example targets) run_app.sh - Script running example applications _brand.yml - Default branding configuration config.yml - Package configuration template","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-failures","dir":"","previous_headings":"Common Issues and Solutions","what":"Build Failures","title":"R Branding Package Developer Instructions","text":"Missing leaflet: Normal restricted environments. Use _R_CHECK_FORCE_SUGGESTS_=false flag. LaTeX errors: Install texlive-fonts-extra package. Permission errors: Use sudo system-wide R package installation.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"network-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Network Issues","title":"R Branding Package Developer Instructions","text":"CRAN access blocked: Use apt packages instead CRAN possible. Download failures get_brand(): Normal behavior, function includes error handling.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"application-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Application Issues","title":"R Branding Package Developer Instructions","text":"Missing leaflet/DT: Example apps require packages. Core package functions work without . Port conflicts: Default Shiny port 3838, change needed.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"github-workflows","dir":"","previous_headings":"CI/CD Information","what":"GitHub Workflows","title":"R Branding Package Developer Instructions","text":"R-CMD-check.yaml: Runs push/PR, tests across multiple R versions OS pkgdown.yaml: Builds deploys package documentation website","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-matrix","dir":"","previous_headings":"CI/CD Information","what":"Build Matrix","title":"R Branding Package Developer Instructions","text":"Tests run : - macOS (latest R) - Windows (latest R) - Ubuntu (devel, release, oldrel-1)","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"making-changes","dir":"","previous_headings":"Development Workflow","what":"Making Changes","title":"R Branding Package Developer Instructions","text":"Always run build validation first: _R_CHECK_FORCE_SUGGESTS_=false make check Test core functionality: echo 'library(rbranding); brand_init()' | R ---save --quiet Update documentation needed: make docs Validate changes don’t break existing functionality Test example apps dependencies available","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"before-committing","dir":"","previous_headings":"Development Workflow","what":"Before Committing","title":"R Branding Package Developer Instructions","text":"Ensure package builds successfully Run documentation generation Test core package functions Verify new errors introduced check process","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"time-expectations","dir":"","previous_headings":"","what":"Time Expectations","title":"R Branding Package Developer Instructions","text":"Package check: 10-15 seconds Package install: 1 second Documentation: 1.5 seconds Dependency installation: 2-5 minutes (network available) Example app startup: 5-10 seconds (dependencies available) ALWAYS wait completion. NEVER CANCEL long-running commands.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"branding-package","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"Facilitate creation Shiny apps CFA projects conform STLTs’ branding design standards, automatically provide much accessibility ForeSITE Shiny apps possible.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"What the Package Does (Title Case)","text":"branding-package helps R developers quickly build Shiny applications visually consistent, accessible, easy maintain. provides tools manage branding assets, apply organization-wide themes, streamline setup new projects.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"project-features-and-aspirations","dir":"","previous_headings":"","what":"Project Features and aspirations","title":"What the Package Does (Title Case)","text":"Branding File Management: Download, update, validate branding YAML files consistent theming. Shiny App Templates: Quickly scaffold Shiny apps follow best practices branding accessibility. Accessibility: Built-support accessible color palettes UI components. Integration: Easily integrates bslib, thematic, modern R packages.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"Note: brand_init() get_brand() intended run interactively R console, inside scripts. Load branding YAML apply theme UI/server code.","code":"# Install from GitHub (if not on CRAN) remotes::install_github(\"EpiForeSITE/branding-package\")  # Initialize branding config (run in the R console) library(rbranding) brand_init() # You may edit the generated config.yml file if necessary.  # Update or fetch the latest branding file (run in the R console) get_brand()"},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"What the Package Does (Title Case)","text":"Function documentation available via ?get_brand ?brand_init loading package. See pkgdown site full reference vignettes.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"What the Package Does (Title Case)","text":"Pull requests issues welcome! Please see CONTRIBUTING.md guidelines.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"What the Package Does (Title Case)","text":"MIT","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Brand Logo to ggplot2 Plot — brand_add_logo","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"Adds logo brand configuration annotation ggplot2 plot.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"","code":"brand_add_logo(x = 0.9, y = 0.1, size = 0.05, logo_type = \"icon\")"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"x Numeric. Horizontal position logo (0-1 scale). Default 0.9. y Numeric. Vertical position logo (0-1 scale). Default 0.1. size Numeric. Size logo fraction plot (0-1 scale). Default 0.05. logo_type Character. logo use: \"icon\" (default) \"full\".","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"ggplot2 annotation_custom layer can added plot +.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"function reads logo path stored brand configuration creates ggplot2 annotation layer. brand configuration must loaded first using brand_set_ggplot(). function supports PNG images requires 'png' 'grid' packages.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"","code":"if (FALSE) { # \\dontrun{ # First set the brand theme to load configuration brand_set_ggplot()  # Create a plot and add logo library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot\") +   brand_add_logo()  # Customize logo position and size ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot\") +   brand_add_logo(x = 0.1, y = 0.9, size = 0.08) } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Branding Config — brand_init","title":"Initialize Branding Config — brand_init","text":"Initializes branding creating config.yml file remote local file paths, placeholder _brand.yml file.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Branding Config — brand_init","text":"","code":"brand_init(get_default_brand = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Branding Config — brand_init","text":"get_default_brand Logical. TRUE, calls get_brand() download latest branding file initialization. Default TRUE.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Branding Config — brand_init","text":"return value. Side effects: creates config.yml _brand.yml.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Branding Config — brand_init","text":"function intended run set configuration branding file management.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Branding Config — brand_init","text":"","code":"brand_init(get_default_brand = FALSE) #> config.yml created with remote and local file paths.  Initial _brand.yml created."},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"Resets ggplot2 theme state brand_set_ggplot() called.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"","code":"brand_reset_ggplot()"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"Invisibly returns TRUE reset successful, FALSE previous theme stored.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ # Set brand theme brand_set_ggplot()  # Create some plots with brand theme...  # Reset to original theme brand_reset_ggplot() } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"Sets ggplot2 theme based colors typography defined _brand.yml file. function reads brand configuration applies default ggplot2 theme.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"","code":"brand_set_ggplot(brand_file = NULL, use_fonts = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"brand_file Path _brand.yml file. NULL, looks _brand.yml current directory. use_fonts Logical. Whether attempt load use custom fonts brand file. Default TRUE.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"Invisibly returns previous ggplot2 theme (potential restoration).","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"function reads brand.yml file extracts color typography information create custom ggplot2 theme. function: Maps brand colors ggplot2 theme elements Attempts load Google Fonts specified brand file Stores previous theme later restoration Sets new theme default subsequent ggplot2 plots brand.yml file follow schema defined : https://github.com/posit-dev/brand-yml/","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ # Set theme from default _brand.yml file brand_set_ggplot()  # Create a plot - will use the brand theme library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot with Brand Theme\")  # Reset to original theme brand_reset_ggplot() } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Latest Branding File — get_brand","title":"Get the Latest Branding File — get_brand","text":"Downloads latest _brand.yml file repository compares local _brand.yml file. different, prompts user overwrite local file. local file exist, created.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Latest Branding File — get_brand","text":"","code":"get_brand()"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Latest Branding File — get_brand","text":"return value. Side effects: may overwrite _brand.yml create bak_brand.yml.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Latest Branding File — get_brand","text":"Reads configuration config.yml. Handles download errors file comparison using MD5 hashes. Prompts user action files differ.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Latest Branding File — get_brand","text":"","code":"# Initialize config and local brand file brand_init(get_default_brand = FALSE) #> config.yml created with remote and local file paths.  Initial _brand.yml created. # Update local brand file if needed if (FALSE) { # \\dontrun{   # Don't run example (requires github access token)   get_brand() } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"Get Shiny Templates Copy Example App Files inst/examples inst/app","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"","code":"get_template(example_name = NULL, install_to = \"\")"},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"example_name Optional string. Name example folder inst/examples. NULL, function list available examples prompt user select one. install_to Directory example files copied. Defaults current working directory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"NULL (called side effects)","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"","code":"if (interactive()) {   get_template() # prompts user to select an example }"}]
