[{"path":[]},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement @WillyRay. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://epiforesite.github.io/rbranding/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://epiforesite.github.io/rbranding/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rbranding","title":"Contributing to rbranding","text":"outlines propose change rbranding.","code":""},{"path":"https://epiforesite.github.io/rbranding/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to rbranding","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://epiforesite.github.io/rbranding/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to rbranding","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://epiforesite.github.io/rbranding/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to rbranding","text":"recommend create Git branch pull request (PR). New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2 Markdown syntax documentation. use tinytest. Generally, contributions must test cases included accept . user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://epiforesite.github.io/rbranding/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to rbranding","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://epiforesite.github.io/rbranding/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rbranding authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"principles","dir":"Articles","previous_headings":"General Design Principles for Accessibility","what":"Principles","title":"Accessibility Guidelines","text":"Use descriptive alt text non-text content Avoid using color convey meaning Ensure sufficient contrast text UI elements Ensure functions keyboard-accessible Provide clear focus indicators Avoid time-limited interactions unless necessary Use consistent layout predictable navigation Group related controls landmarks (e.g., <main>, <nav>) Use headings (<h1>–<h6>) meaningfully hierarchically Provide downloadable raw data visualizations Use accessible HTML tables present data possible Include text summaries visualizations Reuse layouts component patterns Ensure button/tab behaviors predictable Avoid keyboard traps focus loops","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"testing-tools","dir":"Articles","previous_headings":"","what":"Testing Tools","title":"Accessibility Guidelines","text":"free, widely available tools can use evaluate accessibility dashboards: axe DevTools Browser Extension: Runs automated scans developer tools flag WCAG issues suggest fixes right browser. WAVE Browser Extension: Adds ‑page overlay visually marks accessibility errors, alerts, structural cues quick review. WebAIM Contrast Checker: Tests foreground‑background color pair confirm meets WCAG AA/AAA contrast ratios. addition automated tools, always perform manual checks screen reader. Popular options include VoiceOver (macOS/iOS), NVDA (Windows), JAWS (Windows).","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/accessibility.html","id":"accessiblity-guidelines-cheatsheet","dir":"Articles","previous_headings":"","what":"Accessiblity Guidelines Cheatsheet","title":"Accessibility Guidelines","text":"created cheatsheet accessiblity guidelines. may download cheatsheet PDF SVG","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"ggplot2 and Thematic Integration with Brand Themes","text":"vignette demonstrates integrate ggplot2 plotly visualizations brand themes using rbranding package. package provides functions : Load brand configuration _brand.yml files Apply brand colors typography ggplot2 themes Add brand logos plots Reset themes needed","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"ggplot2 and Thematic Integration with Brand Themes","text":"First, let’s load required packages:","code":"library(rbranding) library(ggplot2)  # Suggested packages for enhanced functionality # library(plotly)  # For interactive plots # library(sysfonts)  # For custom fonts # library(showtext)  # For custom fonts"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-1-initialize-and-load-brand-configuration","dir":"Articles","previous_headings":"","what":"Step 1: Initialize and Load Brand Configuration","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Start initializing branding configuration getting latest brand file: vignette, ’ll use existing _brand.yml file package:","code":"# Initialize branding (creates rbranding_config.yml and placeholder _brand.yml) brand_init()  # Get the latest brand file from the repository get_brand_public()  # to install these files directly to your working directory: get_template(\"ggplot2\") # In a real project, you would have a _brand.yml file in your working directory # For this demo, we'll use the package's example brand file brand_file <- system.file(\"brand_files\", \"_brand.yml\", package = \"rbranding\") if (brand_file != \"\") {   file.copy(brand_file, \"_brand.yml\")   # Copy logo files as well   logo_files <- list.files(system.file(\"brand_files\", package = \"rbranding\"),                            pattern = \"*.png\", full.names = TRUE)   file.copy(logo_files, \".\")   brand_file <- \"_brand.yml\" } else {   # Fallback to a basic brand configuration for demonstration   brand_config <- \" meta:   name:     full: Example Organization     short: EO  color:   palette:     primary: '#1c8478'     secondary: '#4e2d53'     accent: '#474747'   foreground: black   background: white   primary: primary   secondary: secondary  typography:   fonts:     - family: Open Sans       source: google   base: Open Sans \"   writeLines(brand_config, \"_brand.yml\")   brand_file <- \"_brand.yml\" }  cat(\"Using brand file:\", brand_file) #> Using brand file: _brand.yml"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-2-set-the-ggplot2-theme","dir":"Articles","previous_headings":"","what":"Step 2: Set the ggplot2 Theme","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Apply brand theme ggplot2. set colors fonts according brand configuration:","code":"# Set the brand theme brand_set_ggplot(brand_file) #> Brand theme applied successfully! #> Custom font loaded: open_sans"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-3-create-ggplot2-visualizations","dir":"Articles","previous_headings":"","what":"Step 3: Create ggplot2 Visualizations","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Now create plots automatically use brand theme:","code":"# Create a basic scatter plot p1 <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point(aes(color = factor(cyl)), size = 3) +   labs(     title = \"Car Weight vs. Miles per Gallon\",     subtitle = \"Data from the 1974 Motor Trend magazine\",     x = \"Miles per Gallon\",     y = \"Weight (1000 lbs)\",     color = \"Cylinders\"   ) +   theme(legend.position = \"bottom\")  print(p1) # Create a bar plot p2 <- ggplot(mtcars, aes(x = factor(cyl), fill = factor(gear))) +   geom_bar(position = \"dodge\") +   labs(     title = \"Car Count by Cylinders and Gears\",     x = \"Number of Cylinders\",     y = \"Count\",     fill = \"Gears\"   ) +   theme(legend.position = \"bottom\")  print(p2)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-4-add-brand-logo-optional","dir":"Articles","previous_headings":"","what":"Step 4: Add Brand Logo (Optional)","title":"ggplot2 and Thematic Integration with Brand Themes","text":"brand configuration includes logo, can add plots:","code":"# Add logo to the plot (requires logo in brand.yml and png package) p1_with_logo <- p1 + brand_add_logo(x = 0.9, y = 0.1, size = 0.05) print(p1_with_logo)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-5-interactive-plots-with-plotly","dir":"Articles","previous_headings":"","what":"Step 5: Interactive Plots with plotly","title":"ggplot2 and Thematic Integration with Brand Themes","text":"can also create interactive versions plots using plotly:","code":"library(plotly)  # Convert ggplot to interactive plotly chart p1_interactive <- ggplotly(p1, tooltip = c(\"x\", \"y\", \"colour\")) p1_interactive"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-6-advanced-theming","dir":"Articles","previous_headings":"","what":"Step 6: Advanced Theming","title":"ggplot2 and Thematic Integration with Brand Themes","text":"can customize specific aspects theme maintaining brand consistency:","code":"# Customize theme elements while keeping brand colors p3 <- ggplot(mtcars, aes(x = hp, y = mpg, size = wt)) +   geom_point(alpha = 0.7) +   scale_size_continuous(range = c(2, 8)) +   labs(     title = \"Engine Performance Analysis\",     subtitle = \"Relationship between horsepower, fuel efficiency, and weight\",     x = \"Horsepower\",     y = \"Miles per Gallon\",     size = \"Weight (1000 lbs)\"   ) +   theme(     plot.title = element_text(size = 16, face = \"bold\"),     plot.subtitle = element_text(size = 12, face = \"italic\"),     legend.position = \"right\"   )  print(p3)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"step-7-reset-theme","dir":"Articles","previous_headings":"","what":"Step 7: Reset Theme","title":"ggplot2 and Thematic Integration with Brand Themes","text":"’re done brand theme, can reset default ggplot2 theme:","code":"# Reset to original theme brand_reset_ggplot() #> ggplot2 theme reset to previous state.  # Create a plot with default theme to show the difference p4 <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point(aes(color = factor(cyl)), size = 3) +   labs(     title = \"Same Plot with Default Theme\",     x = \"Miles per Gallon\",     y = \"Weight (1000 lbs)\",     color = \"Cylinders\"   )  print(p4)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"best-practices","dir":"Articles","previous_headings":"","what":"Best Practices","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Set theme early: Call brand_set_ggplot() beginning analysis Test font loading: Custom fonts may work environments Use consistent colors: Stick brand palette consistency Reset needed: Use brand_reset_ggplot() return default themes Logo placement: Position logos don’t interfere data","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"common-issues","dir":"Articles","previous_headings":"Troubleshooting","what":"Common Issues","title":"ggplot2 and Thematic Integration with Brand Themes","text":"Font loading fails: environments may support custom Google Fonts Logo found: Ensure logo path _brand.yml correct file exists Colors applied: Check _brand.yml file follows correct schema","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"solutions","dir":"Articles","previous_headings":"Troubleshooting","what":"Solutions","title":"ggplot2 and Thematic Integration with Brand Themes","text":"","code":"# Disable custom fonts if having issues brand_set_ggplot(use_fonts = FALSE)  # Check brand configuration doc <- yaml::read_yaml(\"_brand.yml\") str(doc$color) str(doc$typography)"},{"path":"https://epiforesite.github.io/rbranding/articles/ggplot2-integration.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"ggplot2 and Thematic Integration with Brand Themes","text":"rbranding package makes easy create consistent, branded visualizations across organization. following workflow, can ensure ggplot2 plotly charts maintain brand consistency accessible professional. information brand.yml schema, visit: https://github.com/posit-dev/brand-yml/","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"introduction-to-rbranding","dir":"Articles","previous_headings":"","what":"Introduction to rbranding","title":"rbranding","text":"rbranding package provides set tools help create maintain consistent branding across R projects. powered _brand.yml, configuration file defines brand’s visual identity, including colors, fonts, logos, design elements. _brand.yml supported various R-based platforms, including Shiny, Quarto, R Markdown. rbranding package provides functions setting branding files, updating remote sources, applying projects. also includes templates various project types, making easy get started branded project. package supports ‘Quarto’, ‘Shiny’ ‘RMarkdown’ bslib, integrates ‘ggplot2’ ‘plotly’ producing branded graphics visualizations. Finally, rbranding package provides guidelines support accessibility, ensuring branded content usable audiences.","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"initialization","dir":"Articles","previous_headings":"Introduction to rbranding","what":"Initialization","title":"rbranding","text":"Use brand_init() initialize branding setup: function generates two files: rbranding_config.yml: Contains configuration settings updating _brand.yml file, specifically URL brand file (brand_url) path local _brand.yml file (based install_path). Essentially, file saves parameters used calling brand_init(), allowing easily update branding files future without needing remember re-enter details. _brand.yml: local brand configuration file. calling brand_init(), file contains placeholder text need updated get_brand_*(), describe next section. Note: brand_url install_path optional parameters. provided, brand_init() set brand_url _brand.yml hosted rbranding GitHub page. install_path defaults current working directory (\".\"). brand_init() intended run per project. sets necessary configuration managing brand files, need run unless want change brand_url install_path.","code":"brand_init(brand_url = \"your_brand_file_url_here\", install_path = \".\")"},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"updating-your-brand-file","dir":"Articles","previous_headings":"Introduction to rbranding","what":"Updating Your Brand File","title":"rbranding","text":"Now ’ve initialized branding setup brand_init(), can use get_brand_*() functions download update local _brand.yml file remote source. ’ll need least calling brand_init(), since _brand.yml file generated function contains placeholder text. However, functions can also used update local _brand.yml file whenever changes made remote brand file. currently two get_brand_*() functions available, depending brand file hosted: get_brand_public(): Use function brand file hosted publicly, public GitHub repository web server. get_brand_private_github(): Use function brand file hosted private GitHub repository. requires GitHub personal access token (PAT) appropriate permissions access repository. get_brand_*() functions download brand file URL specified rbranding_config.yml file saves local file path specified (typically current working directory). default function runs interactively, can disabled setting run_interactive = FALSE. can also specify backup file, previous version _brand.yml file saved overwritten. , call function whenever want update local _brand.yml file latest version remote source.","code":""},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"example-usage","dir":"Articles","previous_headings":"Introduction to rbranding","what":"Example Usage","title":"rbranding","text":"simple example using default brand file hosted rbranding GitHub page.","code":"# Temp directory tmpdir <- file.path(tempdir(), \"rbranding_example\") # Initializes the brand files in the current working directory brand_init(install_path = tmpdir) #> Created files '/tmp/RtmpOfYXBb/rbranding_example/rbranding_config.yml' and placeholder '_brand.yml' in /tmp/RtmpOfYXBb/rbranding_example  cat(readLines(file.path(tmpdir, \"_brand.yml\")), sep = \"\\n\") #> Update this file with rbranding::get_brand_public() (or another `get_brand_*` function)  # Downloads the public brand file from the rbranding GitHub page # and saves it as _brand.yml in the current working directory get_brand_public(   config_file = file.path(tmpdir, \"rbranding_config.yml\"),   run_interactive = FALSE ) #> Checking remote version... #> Local branding file overwritten with remote file  # Check the contents of the _brand.yml file cat(readLines(file.path(tmpdir, \"_brand.yml\")), sep = \"\\n\") #> meta: #>   name: rbranding #>   links: #>     docs: https://epiforesite.github.io/rbranding/ #>     github: https://github.com/EpiForeSITE/rbranding/ #>  #> logo: #>   images: #>     icon: #>       path: icon.png #>       alt: \"Company icon with abstract shapes\" #>     logo: #>       path: logo.png #>       alt: \"Full company logo with tagline\" #>   small: icon #>  #>  #>  #> color: #>   palette: #>     orange: \"#FF6F20\" #>     pink: \"#FF3D7F\" #>     green: \"#28A745\" #>     yellow: \"#FFC107\" #>   primary: orange #>   success: green #>   warning: yellow #>   danger: pink #>  #> typography: #>   fonts: #>     - family: Open Sans #>       source: google #>     - family: IBM Plex Mono #>       source: google #>     - family: Rubik #>       source: google #>   base: #>     family: Open Sans #>     line-height: 1.6 #>   headings: #>     family: Rubik #>     weight: normal #>   link: #>     color: purple #>   monospace: #>     family: IBM Plex Mono #>     size: 1em #>  #> defaults: #>   quarto: #>     format: #>       # basic format-specific settings #>   shiny: #>     # shiny specific settings"},{"path":"https://epiforesite.github.io/rbranding/articles/rbranding.html","id":"using-templates","dir":"Articles","previous_headings":"Introduction to rbranding","what":"Using Templates","title":"rbranding","text":"rbranding package includes several templates help get started branded projects. can use get_template() function download set template: copy contents shinyapp template current working directory. template provides ready--use Shiny app files branding support. can specify templates changing template_name argument get_template(). Available templates include: ggplot2: R script using ggplot2 qggplot2: Quarto Report Branded ggplot2 Figures qwebsite: Simple Quarto Website Template rmark: R Markdown document shiny_example: Simple Histogram Visualization Shiny App shinyapp: Complex Histogram Visualization Shiny App kmeans: Simple K-means Clustering Visualization Shiny App wastewater: Complex Wasterwater Data Visualization Shiny App","code":"get_template(template_name = \"shinyapp\")"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"qwebsite-simple-quarto-website-template","dir":"Articles","previous_headings":"Quarto Templates","what":"qwebsite: Simple Quarto Website Template","title":"Templates","text":"Provides basic structure Quarto website multiple pages, navigation, branding support.","code":"get_template(\"qwebsite\")"},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"qggplot2-quarto-report-with-branded-ggplot2-figures","dir":"Articles","previous_headings":"Quarto Templates","what":"qggplot2: Quarto Report with Branded ggplot2 Figures","title":"Templates","text":"Provides Quarto report setup integrates _brand.yml ggplot2 creating branded visualizations.","code":"get_template(\"qggplot2\")"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"simple-app-histogram-visualization","dir":"Articles","previous_headings":"Shiny App Templates","what":"Simple App: Histogram Visualization","title":"Templates","text":"Provides simple Shiny app allows users interactively adjust parameters see results histogram.","code":"get_template(\"shiny_example\") shiny::runApp(\".\")"},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"simple-app-k-means-clustering-visualization","dir":"Articles","previous_headings":"Shiny App Templates","what":"Simple App: K-means Clustering Visualization","title":"Templates","text":"Provides simple Shiny app demonstrates K-means clustering interactive controls number clusters points. Based example","code":"get_template(\"kmeans\") shiny::runApp(\".\")"},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"complex-app-histogram-visualization","dir":"Articles","previous_headings":"Shiny App Templates","what":"Complex App: Histogram Visualization","title":"Templates","text":"Provides complex Shiny app multiple tabs, allowing users interactively adjust parameters view results different formats.","code":"get_template(\"shinyapp\") shiny::shinyAppFile(\"app.r\")"},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"complex-app-wasterwater-data-visualization","dir":"Articles","previous_headings":"Shiny App Templates","what":"Complex App: Wasterwater Data Visualization","title":"Templates","text":"Provides Shiny app template visualizing wastewater data, including interactive plots data tables. example demonstrates integrate branding linkeR package.","code":"get_template(\"wastewater\") shiny::runApp(\".\")"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/articles/templates.html","id":"rmark-r-markdown-template-for-pdf-or-html-reports","dir":"Articles","previous_headings":"Other Templates","what":"rmark: R Markdown Template for PDF or HTML Reports","title":"Templates","text":"Provides basic R Markdown document setup integrates _brand.yml consistent branding reports.","code":"get_template(\"rmark\")"},{"path":"https://epiforesite.github.io/rbranding/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Willy Ray. Author, maintainer. Andrew Pulsipher. Author, contributor. Centers Disease Control Prevention's Center Forecasting Outbreak Analytics. Funder.           Cooperative agreement CDC-RFA-FT-23-0069","code":""},{"path":"https://epiforesite.github.io/rbranding/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ray W, Pulsipher (2025). rbranding: Manage Branding Accessibility R-Based Projects. R package version 0.1.0, https://epiforesite.github.io/rbranding/.","code":"@Manual{,   title = {rbranding: Manage Branding and Accessibility R-Based Projects},   author = {Willy Ray and Andrew Pulsipher},   year = {2025},   note = {R package version 0.1.0},   url = {https://epiforesite.github.io/rbranding/}, }"},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":null,"dir":"","previous_headings":"","what":"R Branding Package Developer Instructions","title":"R Branding Package Developer Instructions","text":"ALWAYS follow instructions first fallback additional search bash commands information incomplete found error.","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"repository-overview","dir":"","previous_headings":"","what":"Repository Overview","title":"R Branding Package Developer Instructions","text":"R package called rbranding facilitates creation Shiny apps CFA projects conforming STLTs’ branding design standards. package provides automated branding configuration, theme management, interactive component linking ForeSITE Shiny applications.","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"core-package-functions","dir":"","previous_headings":"","what":"Core Package Functions","title":"R Branding Package Developer Instructions","text":"brand_init() - Initializes branding configuration creating rbranding_config.yml _brand.yml files get_brand_public() - Downloads/updates latest branding files public source user prompts get_brand_private_github() - Downloads/updates latest branding files private GitHub repositories authentication get_template() - Downloads Shiny Quarto templates branded applications brand_set_ggplot() / brand_reset_ggplot() - Apply/reset branded ggplot2 themes brand_add_logo() - Add branded logos ggplot2 visualizations Note: interactive map-table linking Shiny apps, package uses external linkeR package. See inst/examples/wastewater/app.R demonstration.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"system-requirements","dir":"","previous_headings":"Dependencies and Installation","what":"System Requirements","title":"R Branding Package Developer Instructions","text":"","code":"# Install R and core development tools sudo apt-get update sudo apt-get install -y r-base r-base-dev sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-extra"},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"r-package-dependencies","dir":"","previous_headings":"Dependencies and Installation","what":"R Package Dependencies","title":"R Branding Package Developer Instructions","text":"CRITICAL: CRAN access fails network errors, normal restricted environments. package builds successfully just apt-installed dependencies.","code":"# Install core R packages via apt (more reliable than CRAN in restricted environments) sudo apt-get install -y r-cran-devtools r-cran-yaml r-cran-shiny r-cran-dt r-cran-htmltools sudo apt-get install -y r-cran-dplyr r-cran-knitr r-cran-rmarkdown r-cran-bslib  # If network access to CRAN is available, install additional packages: sudo Rscript -e \"install.packages(c('leaflet', 'tinytest', 'here', 'pkgdown'), repos='https://cloud.r-project.org/')\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"build-commands","dir":"","previous_headings":"Building and Testing","what":"Build Commands","title":"R Branding Package Developer Instructions","text":"NEVER CANCEL builds tests. Package builds complete 10-15 seconds. Always set appropriate timeouts: - Build/check commands: Set timeout 30+ minutes - Documentation: Set timeout 10+ minutes - Installation: Set timeout 5+ minutes","code":"# Build and check the package - NEVER CANCEL, takes 10-15 seconds _R_CHECK_FORCE_SUGGESTS_=false make check  # Install the package - takes 1 second   sudo make install  # Generate documentation - takes 1.5 seconds make docs  # Build pkgdown website (if pkgdown available) make website"},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"testing","dir":"","previous_headings":"Building and Testing","what":"Testing","title":"R Branding Package Developer Instructions","text":"Note: Current tests path dependency issues. Core package functionality can validated manually.","code":"# Test core package functionality (always works) echo 'library(rbranding); brand_init()' | R --no-save --quiet  # Run unit tests (requires tinytest and proper paths) echo 'library(tinytest); run_test_dir(\"inst/tinytest\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"available-applications","dir":"","previous_headings":"Running Applications","what":"Available Applications","title":"R Branding Package Developer Instructions","text":"Main App: inst/app/app.R - Main branding demonstration app Wastewater Dashboard: inst/examples/wastewater/app.R - Interactive map/table linking Quarto Website: inst/examples/qwebsite/ - Branded Quarto site example R Markdown: inst/examples/rmark/ - Branded R Markdown examples","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"running-apps-with-script","dir":"","previous_headings":"Running Applications","what":"Running Apps with Script","title":"R Branding Package Developer Instructions","text":"","code":"# Run main app (in inst/app/) ./run_app.sh  # Note: Script looks for inst/app/examples/ but examples are in inst/examples/ # Run examples manually instead: cd inst/examples/wastewater && Rscript app.R  # Get script help ./run_app.sh --help"},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"manual-shiny-app-execution","dir":"","previous_headings":"Running Applications","what":"Manual Shiny App Execution","title":"R Branding Package Developer Instructions","text":"DEPENDENCY LIMITATION: Example apps require leaflet DT packages may available environments. Core package functionality works without .","code":"# For apps requiring full dependencies cd inst/examples/wastewater Rscript -e \"shiny::runApp('app.R', host='0.0.0.0', port=3838)\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"always-test-after-making-changes","dir":"","previous_headings":"Validation Scenarios","what":"ALWAYS Test After Making Changes","title":"R Branding Package Developer Instructions","text":"Build Validation: Must complete successfully 10-15 seconds. Core Function Test: create rbranding_config.yml _brand.yml files. Package Help Test: display package information function index. Documentation Test: complete without errors 1.5 seconds.","code":"_R_CHECK_FORCE_SUGGESTS_=false make check echo 'library(rbranding); brand_init()' | R --no-save --quiet echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet make docs"},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"manual-testing-workflow","dir":"","previous_headings":"Validation Scenarios","what":"Manual Testing Workflow","title":"R Branding Package Developer Instructions","text":"dependencies available (common restricted environments): 1. Test core package functions: bash    echo 'library(rbranding); brand_init()' | R ---save --quiet create rbranding_config.yml _brand.yml files without errors. Test package loading help: dependencies available (full environment): 1. Navigate inst/examples/wastewater/ 2. Start Shiny app: Rscript -e \"shiny::runApp('app.R')\" 3. Test interactive features: - Click map markers verify table row selection - Click table rows verify map marker highlighting - Verify details panel updates correctly - Test multiple locations Note: Main app inst/app/app.R currently structural issues. Use example apps testing.","code":"echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"key-directories","dir":"","previous_headings":"Repository Structure","what":"Key Directories","title":"R Branding Package Developer Instructions","text":"R/ - Package source code (get_repo.R, get_template.R, link_plots.R) inst/examples/ - Example applications demonstrating package usage inst/tinytest/ - Unit tests using tinytest framework man/ - Generated documentation files vignettes/ - Package vignettes tutorials .github/workflows/ - CI/CD pipelines (R-CMD-check.yaml, pkgdown.yaml)","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"important-files","dir":"","previous_headings":"Repository Structure","what":"Important Files","title":"R Branding Package Developer Instructions","text":"DESCRIPTION - Package metadata dependencies Makefile - Build automation (check, install, docs, example targets) run_app.sh - Script running example applications _brand.yml - Default branding configuration rbranding_config.yml - Package configuration template","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"build-failures","dir":"","previous_headings":"Common Issues and Solutions","what":"Build Failures","title":"R Branding Package Developer Instructions","text":"Missing leaflet: Normal restricted environments. Use _R_CHECK_FORCE_SUGGESTS_=false flag. LaTeX errors: Install texlive-fonts-extra package. Permission errors: Use sudo system-wide R package installation.","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"network-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Network Issues","title":"R Branding Package Developer Instructions","text":"CRAN access blocked: Use apt packages instead CRAN possible. **Download failures get_brand_*() functions**: Normal behavior, function includes error handling.","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"application-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Application Issues","title":"R Branding Package Developer Instructions","text":"Missing leaflet/DT: Example apps require packages. Core package functions work without . Port conflicts: Default Shiny port 3838, change needed.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"github-workflows","dir":"","previous_headings":"CI/CD Information","what":"GitHub Workflows","title":"R Branding Package Developer Instructions","text":"R-CMD-check.yaml: Runs push/PR, tests across multiple R versions OS pkgdown.yaml: Builds deploys package documentation website","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"build-matrix","dir":"","previous_headings":"CI/CD Information","what":"Build Matrix","title":"R Branding Package Developer Instructions","text":"Tests run : - macOS (latest R) - Windows (latest R) - Ubuntu (devel, release, oldrel-1)","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"making-changes","dir":"","previous_headings":"Development Workflow","what":"Making Changes","title":"R Branding Package Developer Instructions","text":"Always run build validation first: _R_CHECK_FORCE_SUGGESTS_=false make check Test core functionality: echo 'library(rbranding); brand_init()' | R ---save --quiet Update documentation needed: make docs Validate changes don’t break existing functionality Test example apps dependencies available","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"before-committing","dir":"","previous_headings":"Development Workflow","what":"Before Committing","title":"R Branding Package Developer Instructions","text":"Ensure package builds successfully Run documentation generation Test core package functions Verify new errors introduced check process","code":""},{"path":"https://epiforesite.github.io/rbranding/claude.html","id":"time-expectations","dir":"","previous_headings":"","what":"Time Expectations","title":"R Branding Package Developer Instructions","text":"Package check: 10-15 seconds Package install: 1 second Documentation: 1.5 seconds Dependency installation: 2-5 minutes (network available) Example app startup: 5-10 seconds (dependencies available) ALWAYS wait completion. NEVER CANCEL long-running commands.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":null,"dir":"","previous_headings":"","what":"R Branding Package Developer Instructions","title":"R Branding Package Developer Instructions","text":"ALWAYS follow instructions first fallback additional search bash commands information incomplete found error.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"repository-overview","dir":"","previous_headings":"","what":"Repository Overview","title":"R Branding Package Developer Instructions","text":"R package called rbranding facilitates creation Shiny apps CFA projects conforming STLTs’ branding design standards. package provides automated branding configuration, theme management, interactive component linking ForeSITE Shiny applications.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"core-package-functions","dir":"","previous_headings":"","what":"Core Package Functions","title":"R Branding Package Developer Instructions","text":"brand_init() - Initializes branding configuration creating rbranding_config.yml _brand.yml files get_brand_public() - Downloads/updates latest branding files public source user prompts get_brand_private_github() - Downloads/updates latest branding files private GitHub repositories authentication get_template() - Downloads Shiny Quarto templates branded applications brand_set_ggplot() / brand_reset_ggplot() - Apply/reset branded ggplot2 themes brand_add_logo() - Add branded logos ggplot2 visualizations Note: interactive map-table linking Shiny apps, package uses external linkeR package. See inst/examples/wastewater/app.R demonstration.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"system-requirements","dir":"","previous_headings":"Dependencies and Installation","what":"System Requirements","title":"R Branding Package Developer Instructions","text":"","code":"# Install R and core development tools sudo apt-get update sudo apt-get install -y r-base r-base-dev sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-extra"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"r-package-dependencies","dir":"","previous_headings":"Dependencies and Installation","what":"R Package Dependencies","title":"R Branding Package Developer Instructions","text":"CRITICAL: CRAN access fails network errors, normal restricted environments. package builds successfully just apt-installed dependencies.","code":"# Install core R packages via apt (more reliable than CRAN in restricted environments) sudo apt-get install -y r-cran-devtools r-cran-yaml r-cran-shiny r-cran-dt r-cran-htmltools sudo apt-get install -y r-cran-dplyr r-cran-knitr r-cran-rmarkdown r-cran-bslib  # If network access to CRAN is available, install additional packages: sudo Rscript -e \"install.packages(c('leaflet', 'tinytest', 'here', 'pkgdown'), repos='https://cloud.r-project.org/')\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-commands","dir":"","previous_headings":"Building and Testing","what":"Build Commands","title":"R Branding Package Developer Instructions","text":"NEVER CANCEL builds tests. Package builds complete 10-15 seconds. Always set appropriate timeouts: - Build/check commands: Set timeout 30+ minutes - Documentation: Set timeout 10+ minutes - Installation: Set timeout 5+ minutes","code":"# Build and check the package - NEVER CANCEL, takes 10-15 seconds _R_CHECK_FORCE_SUGGESTS_=false make check  # Install the package - takes 1 second   sudo make install  # Generate documentation - takes 1.5 seconds make docs  # Build pkgdown website (if pkgdown available) make website"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"testing","dir":"","previous_headings":"Building and Testing","what":"Testing","title":"R Branding Package Developer Instructions","text":"Note: Current tests path dependency issues. Core package functionality can validated manually.","code":"# Test core package functionality (always works) echo 'library(rbranding); brand_init()' | R --no-save --quiet  # Run unit tests (requires tinytest and proper paths) echo 'library(tinytest); run_test_dir(\"inst/tinytest\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"available-applications","dir":"","previous_headings":"Running Applications","what":"Available Applications","title":"R Branding Package Developer Instructions","text":"Main App: inst/app/app.R - Main branding demonstration app Wastewater Dashboard: inst/examples/wastewater/app.R - Interactive map/table linking Quarto Website: inst/examples/qwebsite/ - Branded Quarto site example R Markdown: inst/examples/rmark/ - Branded R Markdown examples","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"running-apps-with-script","dir":"","previous_headings":"Running Applications","what":"Running Apps with Script","title":"R Branding Package Developer Instructions","text":"","code":"# Run main app (in inst/app/) ./run_app.sh  # Note: Script looks for inst/app/examples/ but examples are in inst/examples/ # Run examples manually instead: cd inst/examples/wastewater && Rscript app.R  # Get script help ./run_app.sh --help"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"manual-shiny-app-execution","dir":"","previous_headings":"Running Applications","what":"Manual Shiny App Execution","title":"R Branding Package Developer Instructions","text":"DEPENDENCY LIMITATION: Example apps require leaflet DT packages may available environments. Core package functionality works without .","code":"# For apps requiring full dependencies cd inst/examples/wastewater Rscript -e \"shiny::runApp('app.R', host='0.0.0.0', port=3838)\""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"always-test-after-making-changes","dir":"","previous_headings":"Validation Scenarios","what":"ALWAYS Test After Making Changes","title":"R Branding Package Developer Instructions","text":"Build Validation: Must complete successfully 10-15 seconds. Core Function Test: create rbranding_config.yml _brand.yml files. Package Help Test: display package information function index. Documentation Test: complete without errors 1.5 seconds.","code":"_R_CHECK_FORCE_SUGGESTS_=false make check echo 'library(rbranding); brand_init()' | R --no-save --quiet echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet make docs"},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"manual-testing-workflow","dir":"","previous_headings":"Validation Scenarios","what":"Manual Testing Workflow","title":"R Branding Package Developer Instructions","text":"dependencies available (common restricted environments): 1. Test core package functions: bash    echo 'library(rbranding); brand_init()' | R ---save --quiet create rbranding_config.yml _brand.yml files without errors. Test package loading help: dependencies available (full environment): 1. Navigate inst/examples/wastewater/ 2. Start Shiny app: Rscript -e \"shiny::runApp('app.R')\" 3. Test interactive features: - Click map markers verify table row selection - Click table rows verify map marker highlighting - Verify details panel updates correctly - Test multiple locations Note: Main app inst/app/app.R currently structural issues. Use example apps testing.","code":"echo 'library(rbranding); help(package=\"rbranding\")' | R --no-save --quiet"},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"key-directories","dir":"","previous_headings":"Repository Structure","what":"Key Directories","title":"R Branding Package Developer Instructions","text":"R/ - Package source code (get_repo.R, get_template.R, link_plots.R) inst/examples/ - Example applications demonstrating package usage inst/tinytest/ - Unit tests using tinytest framework man/ - Generated documentation files vignettes/ - Package vignettes tutorials .github/workflows/ - CI/CD pipelines (R-CMD-check.yaml, pkgdown.yaml)","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"important-files","dir":"","previous_headings":"Repository Structure","what":"Important Files","title":"R Branding Package Developer Instructions","text":"DESCRIPTION - Package metadata dependencies Makefile - Build automation (check, install, docs, example targets) run_app.sh - Script running example applications _brand.yml - Default branding configuration rbranding_config.yml - Package configuration template","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-failures","dir":"","previous_headings":"Common Issues and Solutions","what":"Build Failures","title":"R Branding Package Developer Instructions","text":"Missing leaflet: Normal restricted environments. Use _R_CHECK_FORCE_SUGGESTS_=false flag. LaTeX errors: Install texlive-fonts-extra package. Permission errors: Use sudo system-wide R package installation.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"network-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Network Issues","title":"R Branding Package Developer Instructions","text":"CRAN access blocked: Use apt packages instead CRAN possible. **Download failures get_brand_*() functions**: Normal behavior, function includes error handling.","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"application-issues","dir":"","previous_headings":"Common Issues and Solutions","what":"Application Issues","title":"R Branding Package Developer Instructions","text":"Missing leaflet/DT: Example apps require packages. Core package functions work without . Port conflicts: Default Shiny port 3838, change needed.","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"github-workflows","dir":"","previous_headings":"CI/CD Information","what":"GitHub Workflows","title":"R Branding Package Developer Instructions","text":"R-CMD-check.yaml: Runs push/PR, tests across multiple R versions OS pkgdown.yaml: Builds deploys package documentation website","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"build-matrix","dir":"","previous_headings":"CI/CD Information","what":"Build Matrix","title":"R Branding Package Developer Instructions","text":"Tests run : - macOS (latest R) - Windows (latest R) - Ubuntu (devel, release, oldrel-1)","code":""},{"path":[]},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"making-changes","dir":"","previous_headings":"Development Workflow","what":"Making Changes","title":"R Branding Package Developer Instructions","text":"Always run build validation first: _R_CHECK_FORCE_SUGGESTS_=false make check Test core functionality: echo 'library(rbranding); brand_init()' | R ---save --quiet Update documentation needed: make docs Validate changes don’t break existing functionality Test example apps dependencies available","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"before-committing","dir":"","previous_headings":"Development Workflow","what":"Before Committing","title":"R Branding Package Developer Instructions","text":"Ensure package builds successfully Run documentation generation Test core package functions Verify new errors introduced check process","code":""},{"path":"https://epiforesite.github.io/rbranding/copilot-instructions.html","id":"time-expectations","dir":"","previous_headings":"","what":"Time Expectations","title":"R Branding Package Developer Instructions","text":"Package check: 10-15 seconds Package install: 1 second Documentation: 1.5 seconds Dependency installation: 2-5 minutes (network available) Example app startup: 5-10 seconds (dependencies available) ALWAYS wait completion. NEVER CANCEL long-running commands.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"rbranding","dir":"","previous_headings":"","what":"Manage Branding and Accessibility R-Based Projects","title":"Manage Branding and Accessibility R-Based Projects","text":"rbranding package tool building projects visually consistent, accessible, easy maintain. provides functions managing branding assets, applying organization-wide themes using ’_brand.yml’, setting new projects accessibility features correct branding. supports ‘Quarto’, ‘Shiny’, ‘RMarkdown’ projects, integrates packages ‘ggplot2’ producing branded graphics visualizations.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"package-features","dir":"","previous_headings":"","what":"Package Features","title":"Manage Branding and Accessibility R-Based Projects","text":"Branding File Management: Download, update, validate branding YAML files consistent theming Project Templates: Quickly scaffold Shiny apps Quarto websites follow best practices branding accessibility Accessibility: Built-support accessible color palettes UI components Integration: Easily integrates ggplot2 bslib, thematic, modern R packages","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manage Branding and Accessibility R-Based Projects","text":"can install stable version rbranding CRAN : get bug fix use feature development version, can install development version rbranding GitHub : Alternatively, development version rbranding also available R-universe project https://epiforesite.r-universe.dev/ :","code":"install.packages(\"rbranding\") # install.packages(\"remotes\") remotes::install_github(\"EpiForeSITE/rbranding\") install.packages('rbranding', repos = c('https://epiforesite.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Manage Branding and Accessibility R-Based Projects","text":"Use brand_init() initialize branding setup. function generates rbranding_config.yml _brand.yml files. generated _brand.yml file contains placeholder text. need edit config file URL brand file, download file using get_brand_public() get_brand_private_github(), depending whether brand file hosted publicly private GitHub repository. get_brand_*() functions also update local _brand.yml file, already exists.","code":"brand_init()"},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"use-in-shiny-apps","dir":"","previous_headings":"","what":"Use in Shiny Apps","title":"Manage Branding and Accessibility R-Based Projects","text":"Load branding YAML apply theme UI/server code.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"project-documentation","dir":"","previous_headings":"","what":"Project Documentation","title":"Manage Branding and Accessibility R-Based Projects","text":"full documentation package, including reference manuals vignettes, available https://epiforesite.github.io/rbranding/.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Manage Branding and Accessibility R-Based Projects","text":"encounter clear bug, please file issue minimal reproducible example GitHub.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Manage Branding and Accessibility R-Based Projects","text":"Please note rbranding project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiforesite.github.io/rbranding/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Manage Branding and Accessibility R-Based Projects","text":"project made possible cooperative agreement CDC-RFA-FT-23-0069 CDC’s Center Forecasting Outbreak Analytics. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Brand Logo to ggplot2 Plot — brand_add_logo","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"brand_add_logo adds logo brand configuration annotation ggplot2 plot.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"","code":"brand_add_logo(x = 0.9, y = 0.1, size = 0.05, logo_type = \"icon\")"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"x Numeric. Horizontal position logo (0-1 scale). Default 0.9. y Numeric. Vertical position logo (0-1 scale). Default 0.1. size Numeric. Size logo fraction plot (0-1 scale). Default 0.05. logo_type Character. logo use: \"icon\" (default) \"full\".","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"ggplot2 annotation_custom layer can added plot +.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"function reads logo path stored brand configuration creates ggplot2 annotation layer. brand configuration must loaded first using brand_set_ggplot(). function supports PNG images requires 'png' 'grid' packages.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_add_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Brand Logo to ggplot2 Plot — brand_add_logo","text":"","code":"if (FALSE) { # \\dontrun{ # First set the brand theme to load configuration brand_set_ggplot()  # Create a plot and add logo library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot\") +   brand_add_logo()  # Customize logo position and size ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot\") +   brand_add_logo(x = 0.1, y = 0.9, size = 0.08) } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize branding configuration — brand_init","title":"Initialize branding configuration — brand_init","text":"brand_init initializes branding configuration creating two files: rbranding_config.yml: contains remote local file paths brand files _brand.yml: placeholder branding file intended run . Use get_brand_*() function download/update brand file.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize branding configuration — brand_init","text":"","code":"brand_init(brand_url = NULL, install_path = \".\")"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize branding configuration — brand_init","text":"brand_url Optional URL. Points remote brand file. NULL, defaults rbranding's brand file GitHub. install_path Optional string. Directory files created. Defaults current working directory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize branding configuration — brand_init","text":"NULL. Called side effects: creating rbranding_config.yml _brand.yml","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize branding configuration — brand_init","text":"","code":"tmpdir <- file.path(tempdir(), \"brand_files\")  brand_init(install_path = tmpdir) #> Created files '/tmp/RtmpT2JFmN/brand_files/rbranding_config.yml' and placeholder '_brand.yml' in /tmp/RtmpT2JFmN/brand_files  # Clean up unlink(tmpdir, recursive = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"brand_reset_ggplot resets ggplot2 theme state brand_set_ggplot() called.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"","code":"brand_reset_ggplot()"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"Invisibly returns TRUE reset successful, FALSE previous theme stored.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_reset_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset ggplot2 Theme to Previous State — brand_reset_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ # Set brand theme brand_set_ggplot()  # Create some plots with brand theme...  # Reset to original theme brand_reset_ggplot() } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"brand_set_ggplot sets ggplot2 theme based colors typography defined _brand.yml file. function reads brand configuration applies default ggplot2 theme.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"","code":"brand_set_ggplot(brand_file = NULL, use_fonts = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"brand_file Path _brand.yml file. NULL, looks _brand.yml current directory. use_fonts Logical. Whether attempt load use custom fonts brand file. Default TRUE.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"Invisibly returns previous ggplot2 theme (potential restoration).","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"function reads brand.yml file extracts color = typography information create custom ggplot2 theme. function: Maps brand colors ggplot2 theme elements Attempts load Google Fonts specified brand file Stores previous theme later restoration Sets new theme default subsequent ggplot2 plots brand.yml file follow schema defined : https://github.com/posit-dev/brand-yml/","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/brand_set_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set ggplot2 Theme from Brand Configuration — brand_set_ggplot","text":"","code":"if (FALSE) { # \\dontrun{ # Set theme from default _brand.yml file brand_set_ggplot()  # Create a plot - will use the brand theme library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   labs(title = \"Example Plot with Brand Theme\")  # Reset to original theme brand_reset_ggplot() } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_private_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the latest branding file from a private GitHub repository — get_brand_private_github","title":"Download the latest branding file from a private GitHub repository — get_brand_private_github","text":"get_brand_private_github downloads latest _brand.yml file remote URL specified rbranding_config.yml provided function arguments. remote file assumed private GitHub repository requires authentication. local _brand.yml file exist, created. local file different remote file, function save contents bak_brand.yml (backup) overwrite local file contents remote file. function run interactively (e.g., RStudio console), user instead prompted choose whether overwrite file whether create backup.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_private_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the latest branding file from a private GitHub repository — get_brand_private_github","text":"","code":"get_brand_private_github(   remote_file = NULL,   local_file = NULL,   auth_token = NULL,   config_file = \"rbranding_config.yml\",   run_interactive = TRUE,   backup = FALSE,   backup_folder = \".\" )"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_private_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the latest branding file from a private GitHub repository — get_brand_private_github","text":"remote_file Optional URL. Points remote brand file. NULL, value configuration file used. local_file Optional string. Path local branding file. NULL, value configuration file used. auth_token Optional authentication token accessing private GitHub repository. NULL, function attempt retrieve token GITHUB_TOKEN environment variable git credential store. config_file Path configuration file. Default rbranding_config.yml. run_interactive Logical indicating whether run interactively. Defaults TRUE. backup Logical indicating whether create backup local file different remote file. Ignored run interactively. Defaults FALSE. backup_folder Folder backup file saved, needed. Defaults current working directory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_private_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the latest branding file from a private GitHub repository — get_brand_private_github","text":"NULL. Called side effects: updating _brand.yml possibly creating bak_brand.yml","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_private_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the latest branding file from a private GitHub repository — get_brand_private_github","text":"","code":"# Interactive example if (interactive()) {   tmpdir <- file.path(tempdir(), \"brand_files\")    # Initialize config and local brand file   brand_init(install_path = tmpdir)    # Update local brand file if needed   get_brand_private_github(     config_file = file.path(tmpdir, \"rbranding_config.yml\")   )    # Cleanup   unlink(tmpdir, recursive = TRUE) }  if (FALSE) { # \\dontrun{   # Example not run because it requires a GitHub   # personal access token with repo access    tmpdir <- file.path(tempdir(), \"brand_files\")   brand_init(install_path = tmpdir)    get_brand_private_github(    config_file = file.path(tmpdir, \"rbranding_config.yml\"),    auth_token = \"your_github_token_here\",    run_interactive = FALSE,    backup = TRUE,    backup_folder = tmpdir   )    # Cleanup   unlink(tmpdir, recursive = TRUE) } # }"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_public.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the latest branding file from a public source — get_brand_public","title":"Download the latest branding file from a public source — get_brand_public","text":"get_brand_public downloads latest _brand.yml file remote URL specified rbranding_config.yml provided function arguments. remote file assumed publicly accessible (authentication), website public GitHub repository. local _brand.yml file exist, created. local file different remote file, function save contents bak_brand.yml (backup) overwrite local file contents remote file. function run interactively (e.g.,RStudio console), user instead prompted choose whether overwrite file whether create backup.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_public.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the latest branding file from a public source — get_brand_public","text":"","code":"get_brand_public(   remote_file = NULL,   local_file = NULL,   config_file = \"rbranding_config.yml\",   run_interactive = TRUE,   backup = FALSE,   backup_folder = \".\" )"},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_public.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the latest branding file from a public source — get_brand_public","text":"remote_file Optional URL. Points remote brand file. NULL, value configuration file used. local_file Optional string. Path local branding file. NULL, value configuration file used. config_file Path configuration file. Default rbranding_config.yml. run_interactive Logical indicating whether run interactively. Defaults TRUE. backup Logical indicating whether create backup local file different remote file. Ignored run interactively. Defaults FALSE. backup_folder Folder backup file saved, needed. Defaults current working directory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_public.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the latest branding file from a public source — get_brand_public","text":"NULL. Called side effects: updating _brand.yml possibly creating bak_brand.yml","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_brand_public.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the latest branding file from a public source — get_brand_public","text":"","code":"# Interactive example if (interactive()) {   tmpdir <- file.path(tempdir(), \"brand_files\")    # Initialize config and local brand file   brand_init(install_path = tmpdir)    # Update local brand file if needed   get_brand_public(     config_file = file.path(tmpdir, \"rbranding_config.yml\")   )    # Cleanup   unlink(tmpdir, recursive = TRUE) }  # Non-interactive example tmpdir <- file.path(tempdir(), \"brand_files\") brand_init(install_path = tmpdir) #> Created files '/tmp/RtmpT2JFmN/brand_files/rbranding_config.yml' and placeholder '_brand.yml' in /tmp/RtmpT2JFmN/brand_files  get_brand_public(  config_file = file.path(tmpdir, \"rbranding_config.yml\"),  run_interactive = FALSE,  backup = TRUE,  backup_folder = tmpdir ) #> Checking remote version...  #> Backup of local branding file saved to '/tmp/RtmpT2JFmN/brand_files/bak_brand.yml' #> Local branding file overwritten with remote file  # Cleanup unlink(tmpdir, recursive = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy template files into project — get_template","title":"Copy template files into project — get_template","text":"get_template copies example files package's examples directory user's current working directory specified subdirectory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy template files into project — get_template","text":"","code":"get_template(template_name = NULL, install_to = NULL)"},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy template files into project — get_template","text":"template_name Optional string. Name template use. Corresponds folder name examples/. NULL (default) within interactive session, function list available examples prompt user select one. install_to Optional string. Directory example files copied. NULL (default), current working directory used.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy template files into project — get_template","text":"NULL. Called side effects: copying template files user's project directory.","code":""},{"path":"https://epiforesite.github.io/rbranding/reference/get_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy template files into project — get_template","text":"","code":"if (interactive()) {   get_template() # prompts user to select an example }  tmpdir <- file.path(tempdir(), \"wastewater_test\") get_template(template_name = \"wastewater\", install_to = tmpdir) #> Copied app.R to /tmp/RtmpT2JFmN/wastewater_test #> Copied icon.png to /tmp/RtmpT2JFmN/wastewater_test #> Copied logo.png to /tmp/RtmpT2JFmN/wastewater_test  # Cleanup unlink(tmpdir, recursive = TRUE)"},{"path":"https://epiforesite.github.io/rbranding/news/index.html","id":"rbranding-010","dir":"Changelog","previous_headings":"","what":"rbranding 0.1.0","title":"rbranding 0.1.0","text":"Functions initializing updating _brand.yml file Examples templates variety projects Initial CRAN release","code":""}]
